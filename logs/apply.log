C:\Users\User\Desktop\terraform\terraZone>terraform.exe apply
yandex_vpc_network.networkans-1: Refreshing state... [id=enpuieu8vcecnmh0ch9r]
yandex_vpc_subnet.subnetans-1: Refreshing state... [id=e9b0r2jirdc9ioed8eba]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with
the following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.vm-Master will be created
  + resource "yandex_compute_instance" "vm-Master" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "terraform1"
      + id                        = (known after apply)
      + metadata                  = {
          + "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: ansible
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL']
                    ssh-authorized-keys:
                      ssh-rsa ....
            EOT
        }
      + name                      = "terraform1"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + description = (known after apply)
              + image_id    = "fd81d2d9ifd50gmvc03g"
              + name        = (known after apply)
              + size        = 12
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = false
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = "e9b0r2jirdc9ioed8eba"
        }

      + placement_policy {
          + placement_group_id = (known after apply)
        }

      + resources {
          + core_fraction = 5
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = true
        }
    }

  # yandex_compute_instance.vm-slave will be created
  + resource "yandex_compute_instance" "vm-slave" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + hostname                  = "terraform2"
      + id                        = (known after apply)
      + metadata                  = {
          + "user-data" = <<-EOT
                #cloud-config
                users:
                  - name: ansible
                    groups: sudo
                    shell: /bin/bash
                    sudo: ['ALL=(ALL) NOPASSWD:ALL']
                    ssh-authorized-keys:
                      ssh-rsa ....
            EOT
        }
      + name                      = "terraform2"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + description = (known after apply)
              + image_id    = "fd81d2d9ifd50gmvc03g"
              + name        = (known after apply)
              + size        = 12
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = false
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = "e9b0r2jirdc9ioed8eba"
        }

      + placement_policy {
          + placement_group_id = (known after apply)
        }

      + resources {
          + core_fraction = 5
          + cores         = 4
          + memory        = 4
        }

      + scheduling_policy {
          + preemptible = true
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + external_ip_address_vm-Master = (known after apply)
  + external_ip_address_vm-slave  = (known after apply)
  + internal_ip_address_vm-Master = (known after apply)
  + internal_ip_address_vm-slave  = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

yandex_compute_instance.vm-slave: Creating...
yandex_compute_instance.vm-Master: Creating...
yandex_compute_instance.vm-slave: Still creating... [10s elapsed]
yandex_compute_instance.vm-Master: Still creating... [10s elapsed]
yandex_compute_instance.vm-slave: Still creating... [20s elapsed]
yandex_compute_instance.vm-Master: Still creating... [20s elapsed]
yandex_compute_instance.vm-slave: Still creating... [30s elapsed]
yandex_compute_instance.vm-Master: Still creating... [30s elapsed]
yandex_compute_instance.vm-slave: Creation complete after 35s [id=fhmg0hfg6e8ejkobph1t]
yandex_compute_instance.vm-Master: Still creating... [40s elapsed]
yandex_compute_instance.vm-Master: Still creating... [50s elapsed]
yandex_compute_instance.vm-Master: Creation complete after 51s [id=fhmf14vcmnevejo9g3b0]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.

Outputs:

external_ip_address_vm-Master = "84.252.129.186"
external_ip_address_vm-slave = "84.201.159.84"
internal_ip_address_vm-Master = "192.168.10.10"
internal_ip_address_vm-slave = "192.168.10.19"
